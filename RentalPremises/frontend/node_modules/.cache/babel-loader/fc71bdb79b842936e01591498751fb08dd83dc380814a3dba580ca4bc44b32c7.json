{"ast":null,"code":"var _jsxFileName = \"D:\\\\Labs\\\\\\u041A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\RentalPremises\\\\frontend\\\\src\\\\Pages\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useLocation } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport Main from './MainPage/Main';\nimport Premise from './Premise/Premise';\nimport Authorization from './AuthorizationPage/Authorization';\n\n// Фиктивная функция для проверки авторизации\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  // Здесь вы можете реализовать вашу логику проверки авторизации\n  // Например, проверка наличия токена доступа в localStorage или куках\n  // Возвращаем true, если пользователь авторизован, и false, если нет\n  return true; // Фиктивное значение, замените его на вашу логику\n};\n\n// Приватный маршрут, который требует авторизации\nconst PrivateRoute = ({\n  element: Element,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(Element, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 52\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n_c = PrivateRoute;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Authorization, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/premise\",\n        element: /*#__PURE__*/_jsxDEV(Premise, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Link","useLocation","useEffect","Main","Premise","Authorization","jsxDEV","_jsxDEV","isAuthenticated","PrivateRoute","element","Element","rest","fileName","_jsxFileName","lineNumber","columnNumber","Navigate","to","replace","_c","App","children","path","_c2","$RefreshReg$"],"sources":["D:/Labs/Курсач/RentalPremises/frontend/src/Pages/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Link, useLocation  } from \"react-router-dom\";\r\nimport { useEffect } from 'react';\r\nimport Main from './MainPage/Main';\r\nimport Premise from './Premise/Premise';\r\nimport Authorization from './AuthorizationPage/Authorization';\r\n\r\n// Фиктивная функция для проверки авторизации\r\nconst isAuthenticated = () => {\r\n    // Здесь вы можете реализовать вашу логику проверки авторизации\r\n    // Например, проверка наличия токена доступа в localStorage или куках\r\n    // Возвращаем true, если пользователь авторизован, и false, если нет\r\n    return true; // Фиктивное значение, замените его на вашу логику\r\n  };\r\n  \r\n  // Приватный маршрут, который требует авторизации\r\n  const PrivateRoute = ({ element: Element, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        element={isAuthenticated() ? <Element /> : <Navigate to=\"/login\" replace />}\r\n      />\r\n    );\r\n  };\r\n  \r\nfunction App() {\r\n    return (\r\n        \r\n        <Router>\r\n                <Routes>\r\n                    <Route path=\"/login\" element={<Authorization/>}/>\r\n                    <Route path=\"/main\" element={<Main/>}/>\r\n                    <Route path=\"/premise\" element={<Premise/>}/>\r\n                </Routes>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,WAAW,QAAS,kBAAkB;AAC7F,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,aAAa,MAAM,mCAAmC;;AAE7D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC1B;EACA;EACA;EACA,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;;AAED;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO,EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,KAAK;EACtD,oBACEL,OAAA,CAACR,KAAK;IAAA,GACAa,IAAI;IACRF,OAAO,EAAEF,eAAe,CAAC,CAAC,gBAAGD,OAAA,CAACI,OAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGT,OAAA,CAACU,QAAQ;MAACC,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7E,CAAC;AAEN,CAAC;AAACI,EAAA,GAPIX,YAAY;AASpB,SAASY,GAAGA,CAAA,EAAG;EACX,oBAEId,OAAA,CAACV,MAAM;IAAAyB,QAAA,eACCf,OAAA,CAACT,MAAM;MAAAwB,QAAA,gBACHf,OAAA,CAACR,KAAK;QAACwB,IAAI,EAAC,QAAQ;QAACb,OAAO,eAAEH,OAAA,CAACF,aAAa;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjDT,OAAA,CAACR,KAAK;QAACwB,IAAI,EAAC,OAAO;QAACb,OAAO,eAAEH,OAAA,CAACJ,IAAI;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvCT,OAAA,CAACR,KAAK;QAACwB,IAAI,EAAC,UAAU;QAACb,OAAO,eAAEH,OAAA,CAACH,OAAO;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEjB;AAACQ,GAAA,GAXQH,GAAG;AAaZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}