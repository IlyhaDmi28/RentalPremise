{"ast":null,"code":"var _jsxFileName = \"D:\\\\Labs\\\\\\u041A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\RentalPremises\\\\frontend\\\\src\\\\Pages\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useLocation, Navigate } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport Main from './MainPage/Main';\nimport Premise from './Premise/Premise';\nimport Authorization from './AuthorizationPage/Authorization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const isAuthenticated = () => {\n    // Здесь вы можете реализовать вашу логику проверки авторизации\n    // Например, проверка наличия токена доступа в localStorage или куках\n    // Возвращаем true, если пользователь авторизован, и false, если нет\n    return true; // Фиктивное значение, замените его на вашу логику\n  };\n\n  // Приватный маршрут, который требует авторизации\n  //   const PrivateRoute = (Component) => {\n  //     return isAuthenticated() ? <Component /> : <Navigate to=\"/login\" replace />;\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Authorization, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 70\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/premise\",\n        element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(Premise, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 73\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 86\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Link","useLocation","Navigate","useEffect","Main","Premise","Authorization","jsxDEV","_jsxDEV","App","isAuthenticated","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["D:/Labs/Курсач/RentalPremises/frontend/src/Pages/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Link, useLocation, Navigate  } from \"react-router-dom\";\r\nimport { useEffect } from 'react';\r\nimport Main from './MainPage/Main';\r\nimport Premise from './Premise/Premise';\r\nimport Authorization from './AuthorizationPage/Authorization';\r\n\r\nfunction App() {\r\n    const isAuthenticated = () => {\r\n        // Здесь вы можете реализовать вашу логику проверки авторизации\r\n        // Например, проверка наличия токена доступа в localStorage или куках\r\n        // Возвращаем true, если пользователь авторизован, и false, если нет\r\n        return true; // Фиктивное значение, замените его на вашу логику\r\n      };\r\n      \r\n      // Приватный маршрут, который требует авторизации\r\n    //   const PrivateRoute = (Component) => {\r\n    //     return isAuthenticated() ? <Component /> : <Navigate to=\"/login\" replace />;\r\n    //   };\r\n\r\n      \r\n    return (\r\n        \r\n        <Router>\r\n                <Routes>\r\n                    <Route path=\"/login\" element={<Authorization/>}/>\r\n                    <Route path=\"/main\" element={isAuthenticated() ? <Main/> : <Navigate to=\"/login\" replace />}/>\r\n                    <Route path=\"/premise\" element={isAuthenticated() ? <Premise/> : <Navigate to=\"/login\" replace />}/>\r\n                </Routes>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,WAAW,EAAEC,QAAQ,QAAS,kBAAkB;AACvG,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,aAAa,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,GAAGA,CAAA,EAAG;EACX,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1B;IACA;IACA;IACA,OAAO,IAAI,CAAC,CAAC;EACf,CAAC;;EAED;EACF;EACA;EACA;;EAGA,oBAEIF,OAAA,CAACX,MAAM;IAAAc,QAAA,eACCH,OAAA,CAACV,MAAM;MAAAa,QAAA,gBACHH,OAAA,CAACT,KAAK;QAACa,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEL,OAAA,CAACF,aAAa;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjDT,OAAA,CAACT,KAAK;QAACa,IAAI,EAAC,OAAO;QAACC,OAAO,EAAEH,eAAe,CAAC,CAAC,gBAAGF,OAAA,CAACJ,IAAI;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,gBAAGT,OAAA,CAACN,QAAQ;UAACgB,EAAE,EAAC,QAAQ;UAACC,OAAO;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC9FT,OAAA,CAACT,KAAK;QAACa,IAAI,EAAC,UAAU;QAACC,OAAO,EAAEH,eAAe,CAAC,CAAC,gBAAGF,OAAA,CAACH,OAAO;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,gBAAGT,OAAA,CAACN,QAAQ;UAACgB,EAAE,EAAC,QAAQ;UAACC,OAAO;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEjB;AAACG,EAAA,GAxBQX,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}