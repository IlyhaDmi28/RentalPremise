{"ast":null,"code":"var _jsxFileName = \"D:\\\\Labs\\\\\\u041A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\RentalPremises\\\\frontend\\\\src\\\\Pages\\\\UserPage\\\\UserParams.js\",\n  _s = $RefreshSig$();\nimport '../../styles/Main.css';\nimport '../../styles/User.css';\nimport ava from '../../img/ava.png';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserParams() {\n  _s();\n  const [errorText, setErrorText] = useState('');\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [login, setLogin] = useState('');\n  const [ava, setAva] = useState(null);\n  const [ava2, setAva2] = useState(null);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/user/photo?login=${user.Login}`, {\n          responseType: 'blob' // Установить responseType на 'blob' для получения данных в виде Blob\n        });\n        const reader = new FileReader();\n        reader.readAsDataURL(response.data); // Прочитать данные в виде Data URL\n\n        reader.onload = () => {\n          const photoUrl = reader.result; // Получить Data URL изображения\n          setAva(photoUrl);\n        };\n      } catch (error) {\n        console.error('Error fetching user photo:', error);\n      }\n    };\n\n    // Загрузка данных с сервера при монтировании компонента\n    fetchData();\n    const setUserValue = async () => {\n      const user = JSON.parse(localStorage.getItem('user'));\n      setName(user.Name);\n      setSurname(user.Surname);\n      setPhoneNumber(user.PhoneNumber);\n      setLogin(user.Login);\n    };\n    setUserValue();\n  }, []);\n  const save = async e => {\n    if (name === '' || surname === '') {\n      setErrorText(\"Вы не заполнили все поля!\");\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('name', name);\n      formData.append('surname', surname);\n      formData.append('phoneNumber', phoneNumber);\n      console.log(ava);\n      formData.append('photo', ava2);\n      formData.append('login', login);\n      const response = await axios.put('http://localhost:3001/user/edit', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const user = response.data.user;\n      console.log(response.data.user);\n      localStorage.setItem('user', JSON.stringify(user));\n      window.location.href = '/main';\n    } catch (error) {\n      console.error('Ошибка при изменении данных пользователя:', error);\n    }\n  };\n  const changeAva = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    setAva2(file);\n    reader.onloadend = () => {\n      setAva(reader.result);\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userParams\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avaController\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: ava,\n        alt: \"Uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: changeAva\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"userForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n        value: surname,\n        onChange: e => setSurname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u0421\\u0442\\u0430\\u0442\\u044C \\u0432\\u043B\\u0430\\u0434\\u0435\\u043B\\u044C\\u0446\\u0435\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"saveButton\",\n      onClick: save,\n      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(UserParams, \"Ckd9PGRR5YcAIrinxl/I2cIbUSg=\");\n_c = UserParams;\nexport default UserParams;\nvar _c;\n$RefreshReg$(_c, \"UserParams\");","map":{"version":3,"names":["ava","axios","React","useState","useEffect","jsxDEV","_jsxDEV","UserParams","_s","errorText","setErrorText","name","setName","surname","setSurname","phoneNumber","setPhoneNumber","login","setLogin","setAva","ava2","setAva2","user","JSON","parse","localStorage","getItem","fetchData","response","get","Login","responseType","reader","FileReader","readAsDataURL","data","onload","photoUrl","result","error","console","setUserValue","Name","Surname","PhoneNumber","save","e","formData","FormData","append","log","put","headers","setItem","stringify","window","location","href","changeAva","file","target","files","onloadend","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","placeholder","value","onClick","_c","$RefreshReg$"],"sources":["D:/Labs/Курсач/RentalPremises/frontend/src/Pages/UserPage/UserParams.js"],"sourcesContent":["import '../../styles/Main.css';\r\nimport '../../styles/User.css';\r\nimport ava from '../../img/ava.png';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction UserParams() {\r\n      const [errorText, setErrorText] = useState('');\r\n      const [name, setName] = useState('');\r\n      const [surname, setSurname] = useState('');\r\n      const [phoneNumber, setPhoneNumber] = useState('');\r\n      const [login, setLogin] = useState('');\r\n      const [ava, setAva] = useState(null);\r\n      const [ava2, setAva2] = useState(null);\r\n\r\n\r\n      useEffect(() => {\r\n            const user  = JSON.parse(localStorage.getItem('user'));\r\n\r\n            const fetchData = async () => {\r\n                  try {\r\n                      const response = await axios.get(`http://localhost:3001/user/photo?login=${user.Login}`, {\r\n                          responseType: 'blob' // Установить responseType на 'blob' для получения данных в виде Blob\r\n                      });\r\n      \r\n                      const reader = new FileReader();\r\n                      reader.readAsDataURL(response.data); // Прочитать данные в виде Data URL\r\n      \r\n                      reader.onload = () => {\r\n                      const photoUrl = reader.result; // Получить Data URL изображения\r\n                      setAva(photoUrl);\r\n                      };\r\n                    } catch (error) {\r\n                      console.error('Error fetching user photo:', error);\r\n                    }\r\n            };\r\n      \r\n              // Загрузка данных с сервера при монтировании компонента\r\n            fetchData();\r\n        \r\n            const setUserValue = async () => {\r\n                  const user = JSON.parse(localStorage.getItem('user'))\r\n                  setName(user.Name);\r\n                  setSurname(user.Surname);\r\n                  setPhoneNumber(user.PhoneNumber);\r\n                  setLogin(user.Login);\r\n            };\r\n\r\n            setUserValue();\r\n      }, []);\r\n\r\n      const save = async (e) => {\r\n            if(name === '' || surname === '') {\r\n                  setErrorText(\"Вы не заполнили все поля!\"); \r\n                  return;\r\n            }\r\n\r\n            try {\r\n                  const formData = new FormData();\r\n                  formData.append('name', name);\r\n                  formData.append('surname', surname);\r\n                  formData.append('phoneNumber', phoneNumber);\r\n                  console.log(ava);\r\n                  formData.append('photo', ava2);\r\n                  formData.append('login', login);\r\n\r\n                  const response = await axios.put('http://localhost:3001/user/edit', formData, {\r\n                        headers: {\r\n                            'Content-Type': 'multipart/form-data'\r\n                        }\r\n                  });\r\n\r\n                  const user = response.data.user;\r\n                  console.log(response.data.user);\r\n                  \r\n                  localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                  window.location.href = '/main';\r\n            } catch (error) {\r\n                  console.error('Ошибка при изменении данных пользователя:', error);\r\n            }\r\n      };\r\n\r\n      const changeAva = (e) => {\r\n            const file = e.target.files[0];\r\n            const reader = new FileReader();\r\n            \r\n            setAva2(file);\r\n            reader.onloadend = () => {\r\n                  setAva(reader.result);\r\n            };\r\n        \r\n            if (file) {\r\n              reader.readAsDataURL(file);\r\n            }\r\n      };\r\n\r\n\treturn (\r\n        <div className=\"userParams\">\r\n            <div className='avaController'>\r\n                  <img src={ava} alt=\"Uploaded\"/>\r\n                  <div className='login'>{login}</div>\r\n                  <input type=\"file\" accept=\"image/*\" onChange={changeAva}/>\r\n\r\n            </div>\r\n\r\n            <form className=\"userForm\">\r\n                  <input placeholder='Имя' value={name} onChange={(e) => setName(e.target.value)}/>\r\n                  <input placeholder='Фамилия' value={surname} onChange={(e) => setSurname(e.target.value)}/>\r\n                  <input placeholder='Номер телефона' value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)}/>\r\n                  <button>Стать владельцем</button>\r\n            </form>\r\n\r\n            <button className='saveButton' onClick={save}>Сохранить измения</button>\r\n        </div>\r\n  \t);\r\n}\r\n\r\nexport default UserParams;"],"mappings":";;AAAA,OAAO,uBAAuB;AAC9B,OAAO,uBAAuB;AAC9B,OAAOA,GAAG,MAAM,mBAAmB;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACH,GAAG,EAAEmB,MAAM,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAGtCC,SAAS,CAAC,MAAM;IACV,MAAMkB,IAAI,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAEtD,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAAE,0CAAyCP,IAAI,CAACQ,KAAM,EAAC,EAAE;UACrFC,YAAY,EAAE,MAAM,CAAC;QACzB,CAAC,CAAC;QAEF,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,aAAa,CAACN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;;QAErCH,MAAM,CAACI,MAAM,GAAG,MAAM;UACtB,MAAMC,QAAQ,GAAGL,MAAM,CAACM,MAAM,CAAC,CAAC;UAChCnB,MAAM,CAACkB,QAAQ,CAAC;QAChB,CAAC;MACH,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACR,CAAC;;IAEC;IACFZ,SAAS,CAAC,CAAC;IAEX,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMnB,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MACrDd,OAAO,CAACU,IAAI,CAACoB,IAAI,CAAC;MAClB5B,UAAU,CAACQ,IAAI,CAACqB,OAAO,CAAC;MACxB3B,cAAc,CAACM,IAAI,CAACsB,WAAW,CAAC;MAChC1B,QAAQ,CAACI,IAAI,CAACQ,KAAK,CAAC;IAC1B,CAAC;IAEDW,YAAY,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,IAAI,GAAG,MAAOC,CAAC,IAAK;IACpB,IAAGnC,IAAI,KAAK,EAAE,IAAIE,OAAO,KAAK,EAAE,EAAE;MAC5BH,YAAY,CAAC,2BAA2B,CAAC;MACzC;IACN;IAEA,IAAI;MACE,MAAMqC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEtC,IAAI,CAAC;MAC7BoC,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEpC,OAAO,CAAC;MACnCkC,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAElC,WAAW,CAAC;MAC3CyB,OAAO,CAACU,GAAG,CAAClD,GAAG,CAAC;MAChB+C,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE7B,IAAI,CAAC;MAC9B2B,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEhC,KAAK,CAAC;MAE/B,MAAMW,QAAQ,GAAG,MAAM3B,KAAK,CAACkD,GAAG,CAAC,iCAAiC,EAAEJ,QAAQ,EAAE;QACxEK,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACN,CAAC,CAAC;MAEF,MAAM9B,IAAI,GAAGM,QAAQ,CAACO,IAAI,CAACb,IAAI;MAC/BkB,OAAO,CAACU,GAAG,CAACtB,QAAQ,CAACO,IAAI,CAACb,IAAI,CAAC;MAE/BG,YAAY,CAAC4B,OAAO,CAAC,MAAM,EAAE9B,IAAI,CAAC+B,SAAS,CAAChC,IAAI,CAAC,CAAC;MAElDiC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;IACpC,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACVC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACvE;EACN,CAAC;EAED,MAAMmB,SAAS,GAAIZ,CAAC,IAAK;IACnB,MAAMa,IAAI,GAAGb,CAAC,CAACc,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAM7B,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAE/BZ,OAAO,CAACsC,IAAI,CAAC;IACb3B,MAAM,CAAC8B,SAAS,GAAG,MAAM;MACnB3C,MAAM,CAACa,MAAM,CAACM,MAAM,CAAC;IAC3B,CAAC;IAED,IAAIqB,IAAI,EAAE;MACR3B,MAAM,CAACE,aAAa,CAACyB,IAAI,CAAC;IAC5B;EACN,CAAC;EAEN,oBACOrD,OAAA;IAAKyD,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvB1D,OAAA;MAAKyD,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACxB1D,OAAA;QAAK2D,GAAG,EAAEjE,GAAI;QAACkE,GAAG,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/BhE,OAAA;QAAKyD,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAE/C;MAAK;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpChE,OAAA;QAAOiE,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,SAAS;QAACC,QAAQ,EAAEf;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3D,CAAC,eAENhE,OAAA;MAAMyD,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACpB1D,OAAA;QAAOoE,WAAW,EAAC,oBAAK;QAACC,KAAK,EAAEhE,IAAK;QAAC8D,QAAQ,EAAG3B,CAAC,IAAKlC,OAAO,CAACkC,CAAC,CAACc,MAAM,CAACe,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjFhE,OAAA;QAAOoE,WAAW,EAAC,4CAAS;QAACC,KAAK,EAAE9D,OAAQ;QAAC4D,QAAQ,EAAG3B,CAAC,IAAKhC,UAAU,CAACgC,CAAC,CAACc,MAAM,CAACe,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3FhE,OAAA;QAAOoE,WAAW,EAAC,iFAAgB;QAACC,KAAK,EAAE5D,WAAY;QAAC0D,QAAQ,EAAG3B,CAAC,IAAK9B,cAAc,CAAC8B,CAAC,CAACc,MAAM,CAACe,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC1GhE,OAAA;QAAA0D,QAAA,EAAQ;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eAEPhE,OAAA;MAAQyD,SAAS,EAAC,YAAY;MAACa,OAAO,EAAE/B,IAAK;MAAAmB,QAAA,EAAC;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEd;AAAC9D,EAAA,CA9GQD,UAAU;AAAAsE,EAAA,GAAVtE,UAAU;AAgHnB,eAAeA,UAAU;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}