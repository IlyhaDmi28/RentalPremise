{"ast":null,"code":"var _jsxFileName = \"D:\\\\Labs\\\\\\u041A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\RentalPremises\\\\frontend\\\\src\\\\Pages\\\\OwnerMainPage\\\\AddPremiseData.js\";\nimport '../../styles/Main.css';\nimport '../../styles/Owner.css';\nimport photo from '../../img/my_house.webp';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPremiseData() {\n  //   const [errorText, setErrorText] = useState('');\n  //   const [name, setName] = useState('');\n  //   const [surname, setSurname] = useState('');\n  //   const [phoneNumber, setPhoneNumber] = useState('');\n  //   const [login, setLogin] = useState('');\n  //   const [ava, setAva] = useState(null);\n  //   const [ava2, setAva2] = useState(null);\n\n  //   useEffect(() => {\n  //         const user  = JSON.parse(localStorage.getItem('user'));\n\n  //         const fetchData = async () => {\n  //               try {\n  //                   const response = await axios.get(`http://localhost:3001/user/photo?login=${user.Login}`, {\n  //                       responseType: 'blob' // Установить responseType на 'blob' для получения данных в виде Blob\n  //                   });\n\n  //                   const reader = new FileReader();\n  //                   reader.readAsDataURL(response.data); // Прочитать данные в виде Data URL\n\n  //                   reader.onload = () => {\n  //                   const photoUrl = reader.result; // Получить Data URL изображения\n  //                   setAva(photoUrl);\n  //                   };\n  //                 } catch (error) {\n  //                   console.error('Error fetching user photo:', error);\n  //                 }\n  //         };\n\n  //           // Загрузка данных с сервера при монтировании компонента\n  //         fetchData();\n\n  //         const setUserValue = async () => {\n  //               const user = JSON.parse(localStorage.getItem('user'))\n  //               setName(user.Name);\n  //               setSurname(user.Surname);\n  //               setPhoneNumber(user.PhoneNumber);\n  //               setLogin(user.Login);\n  //         };\n\n  //         setUserValue();\n  //   }, []);\n\n  //   const save = async (e) => {\n  //         if(name === '' || surname === '') {\n  //               setErrorText(\"Вы не заполнили все поля!\"); \n  //               return;\n  //         }\n\n  //         try {\n  //               const formData = new FormData();\n  //               formData.append('name', name);\n  //               formData.append('surname', surname);\n  //               formData.append('phoneNumber', phoneNumber);\n  //               console.log(ava);\n  //               formData.append('photo', ava2);\n  //               formData.append('login', login);\n\n  //               const response = await axios.put('http://localhost:3001/user/edit', formData, {\n  //                     headers: {\n  //                         'Content-Type': 'multipart/form-data'\n  //                     }\n  //               });\n\n  //               const user = response.data.user;\n  //               console.log(response.data.user);\n\n  //               localStorage.setItem('user', JSON.stringify(user));\n\n  //               window.location.href = '/main';\n  //         } catch (error) {\n  //               console.error('Ошибка при изменении данных пользователя:', error);\n  //         }\n  //   };\n\n  //   const changeAva = (e) => {\n  //         const file = e.target.files[0];\n  //         const reader = new FileReader();\n\n  //         setAva2(file);\n  //         reader.onloadend = () => {\n  //               setAva(reader.result);\n  //         };\n\n  //         if (file) {\n  //           reader.readAsDataURL(file);\n  //         }\n  //       };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"premiseData\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"premisePhotoController\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo,\n        alt: \"Uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        className: \"loadPremisePhoto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"premiseName\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u043C\\u0435\\u0449\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"premiseName\",\n        placeholder: \"\\u0430\\u0434\\u0440\\u0435\\u0441\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changeOwnerList\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: activeLoginModeStyle,\n          onClick: switchToLogin,\n          children: \"\\u041C\\u043E\\u0438 \\u043F\\u043E\\u043C\\u0435\\u0449\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: activeRegisterModeStyle,\n          onClick: switchToRegister,\n          children: \"\\u0410\\u0440\\u0435\\u043D\\u0434\\u0443\\u0435\\u043C\\u044B\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_c = AddPremiseData;\nexport default AddPremiseData;\nvar _c;\n$RefreshReg$(_c, \"AddPremiseData\");","map":{"version":3,"names":["photo","axios","React","useState","useEffect","jsxDEV","_jsxDEV","AddPremiseData","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","placeholder","style","activeLoginModeStyle","onClick","switchToLogin","activeRegisterModeStyle","switchToRegister","_c","$RefreshReg$"],"sources":["D:/Labs/Курсач/RentalPremises/frontend/src/Pages/OwnerMainPage/AddPremiseData.js"],"sourcesContent":["import '../../styles/Main.css';\r\nimport '../../styles/Owner.css';\r\nimport photo from '../../img/my_house.webp';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction AddPremiseData() {\r\n    //   const [errorText, setErrorText] = useState('');\r\n    //   const [name, setName] = useState('');\r\n    //   const [surname, setSurname] = useState('');\r\n    //   const [phoneNumber, setPhoneNumber] = useState('');\r\n    //   const [login, setLogin] = useState('');\r\n    //   const [ava, setAva] = useState(null);\r\n    //   const [ava2, setAva2] = useState(null);\r\n\r\n\r\n    //   useEffect(() => {\r\n    //         const user  = JSON.parse(localStorage.getItem('user'));\r\n\r\n    //         const fetchData = async () => {\r\n    //               try {\r\n    //                   const response = await axios.get(`http://localhost:3001/user/photo?login=${user.Login}`, {\r\n    //                       responseType: 'blob' // Установить responseType на 'blob' для получения данных в виде Blob\r\n    //                   });\r\n      \r\n    //                   const reader = new FileReader();\r\n    //                   reader.readAsDataURL(response.data); // Прочитать данные в виде Data URL\r\n      \r\n    //                   reader.onload = () => {\r\n    //                   const photoUrl = reader.result; // Получить Data URL изображения\r\n    //                   setAva(photoUrl);\r\n    //                   };\r\n    //                 } catch (error) {\r\n    //                   console.error('Error fetching user photo:', error);\r\n    //                 }\r\n    //         };\r\n      \r\n    //           // Загрузка данных с сервера при монтировании компонента\r\n    //         fetchData();\r\n        \r\n    //         const setUserValue = async () => {\r\n    //               const user = JSON.parse(localStorage.getItem('user'))\r\n    //               setName(user.Name);\r\n    //               setSurname(user.Surname);\r\n    //               setPhoneNumber(user.PhoneNumber);\r\n    //               setLogin(user.Login);\r\n    //         };\r\n\r\n    //         setUserValue();\r\n    //   }, []);\r\n\r\n    //   const save = async (e) => {\r\n    //         if(name === '' || surname === '') {\r\n    //               setErrorText(\"Вы не заполнили все поля!\"); \r\n    //               return;\r\n    //         }\r\n\r\n    //         try {\r\n    //               const formData = new FormData();\r\n    //               formData.append('name', name);\r\n    //               formData.append('surname', surname);\r\n    //               formData.append('phoneNumber', phoneNumber);\r\n    //               console.log(ava);\r\n    //               formData.append('photo', ava2);\r\n    //               formData.append('login', login);\r\n\r\n    //               const response = await axios.put('http://localhost:3001/user/edit', formData, {\r\n    //                     headers: {\r\n    //                         'Content-Type': 'multipart/form-data'\r\n    //                     }\r\n    //               });\r\n\r\n    //               const user = response.data.user;\r\n    //               console.log(response.data.user);\r\n                  \r\n    //               localStorage.setItem('user', JSON.stringify(user));\r\n\r\n    //               window.location.href = '/main';\r\n    //         } catch (error) {\r\n    //               console.error('Ошибка при изменении данных пользователя:', error);\r\n    //         }\r\n    //   };\r\n\r\n    //   const changeAva = (e) => {\r\n    //         const file = e.target.files[0];\r\n    //         const reader = new FileReader();\r\n            \r\n    //         setAva2(file);\r\n    //         reader.onloadend = () => {\r\n    //               setAva(reader.result);\r\n    //         };\r\n        \r\n    //         if (file) {\r\n    //           reader.readAsDataURL(file);\r\n    //         }\r\n    //       };\r\n\r\n\treturn (\r\n        <div className=\"premiseData\">\r\n            <form className='premisePhotoController'>\r\n                  <img src={photo} alt=\"Uploaded\"/>\r\n                  <input type=\"file\" accept=\"image/*\" className='loadPremisePhoto' />\r\n                  <input type=\"text\" className='premiseName' placeholder='Название помещения'/>\r\n                  <input type=\"text\" className='premiseName' placeholder='адресс'/>\r\n                  <div className='changeOwnerList'>\r\n                    <button style={activeLoginModeStyle} onClick={switchToLogin}>Мои помещения</button>\r\n\t\t\t\t\t<button style={activeRegisterModeStyle}onClick={switchToRegister}>Арендуемые</button>\r\n                </div>\r\n            </form> \r\n\r\n            {/* <form className=\"userForm\">\r\n                  <input placeholder='Имя' value={name} onChange={(e) => setName(e.target.value)}/>\r\n                  <input placeholder='Фамилия' value={surname} onChange={(e) => setSurname(e.target.value)}/>\r\n                  <input placeholder='Номер телефона' value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)}/>\r\n                  <button>Стать владельцем</button>\r\n            </form>\r\n\r\n            <button className='saveButton' onClick={save}>Сохранить измения</button> */}\r\n        </div>\r\n  \t);\r\n}\r\n\r\nexport default AddPremiseData;"],"mappings":";AAAA,OAAO,uBAAuB;AAC9B,OAAO,wBAAwB;AAC/B,OAAOA,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EACtB;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEH,oBACOD,OAAA;IAAKE,SAAS,EAAC,aAAa;IAAAC,QAAA,eACxBH,OAAA;MAAME,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBAClCH,OAAA;QAAKI,GAAG,EAAEV,KAAM;QAACW,GAAG,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjCT,OAAA;QAAOU,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,SAAS;QAACT,SAAS,EAAC;MAAkB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnET,OAAA;QAAOU,IAAI,EAAC,MAAM;QAACR,SAAS,EAAC,aAAa;QAACU,WAAW,EAAC;MAAoB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7ET,OAAA;QAAOU,IAAI,EAAC,MAAM;QAACR,SAAS,EAAC,aAAa;QAACU,WAAW,EAAC;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjET,OAAA;QAAKE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BH,OAAA;UAAQa,KAAK,EAAEC,oBAAqB;UAACC,OAAO,EAAEC,aAAc;UAAAb,QAAA,EAAC;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClGT,OAAA;UAAQa,KAAK,EAAEI,uBAAwB;UAAAF,OAAO,EAAEG,gBAAiB;UAAAf,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAUN,CAAC;AAEd;AAACU,EAAA,GAlHQlB,cAAc;AAoHvB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}